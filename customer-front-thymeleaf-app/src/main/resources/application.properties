spring.application.name=customer-app
spring.datasource.url=jdbc:h2:mem:customers_db
spring.h2.console.enabled=true
server.port=8083

#for setting up google for oauth2
spring.security.oauth2.client.registration.google.client-id=1079080441359-m96g8skb87mifekgeg2rk9sokf89d943.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.provider.google.user-name-attribute=email

#for github oauth2
spring.security.oauth2.client.registration.github.client-id=c6c8c3bbb3be4c47e088
spring.security.oauth2.client.registration.github.client-secret=72347b1024f91cbac4dffb46a7876665cb94a852
spring.security.oauth2.client.provider.github.user-name-attribute=login


# for keycloak
spring.security.oauth2.client.registration.keycloak.client-name=keycloak
spring.security.oauth2.client.registration.keycloak.client-id=sdia-customer-client
spring.security.oauth2.client.registration.keycloak.client-secret=MzxlNX0LnTRzd7dRr9HcbEIRFbIf7R1r
spring.security.oauth2.client.registration.keycloak.scope=openid,profile,email,offline_access
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri=http://localhost:8083/login/oauth2/code/sdia-customer-client
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/sdia-realm
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username

